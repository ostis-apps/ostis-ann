services:
  web:
    image: ostis/sc-web:prerelease-0.8.0
    build:
      context: ./sc-web
      dockerfile: ./Dockerfile
    container_name: ostis-ann-sc-web
    restart: unless-stopped
    ports:
      - "8000:8000"
    expose:
      - 8000
    networks:
      - ostis-ann
    command:
      - "--server-host=problem-solver"
    depends_on:
      problem-solver:
        condition: service_healthy

  problem-solver:
    image: ostis/ostis-ann:0.1.0
    build:
      context: ./
      dockerfile: ./Dockerfile
    container_name: ostis-ann-problem-solver
    restart: unless-stopped
    volumes:
      - ./kb:/ostis-ann/kb
      - kb-binary:/ostis-ann/kb.bin
      - ./repo.path:/ostis-ann/repo.path
      - ./ostis-ann.ini:/ostis-ann/ostis-ann.ini
    networks:
      - ostis-ann
    ports:
      - "8090:8090"
    expose:
      - 8090
    healthcheck:
      test: "/ostis-ann/problem-solver/sc-machine/scripts/healthcheck.sh"
      interval: 5s
      timeout: 10s
      retries: 6
      start_period: 120s
    environment:
      # Use the commented env variable if you need to rebuild KB every startup.
      - "REBUILD_KB=1"
      - "BINARY_PATH=/ostis-ann/bin"
      - "BUILD_PATH=/ostis-ann/build"
      - "CONFIG_PATH=/ostis-ann/ostis-ann.ini"
      - "KB_PATH=../repo.path"
    command:
      - "serve"

  py-sc-server:
    image: ostis/ostis-ann-py-agents:0.1.0
    build:
      context: ./
      dockerfile: ./problem-solver/py/Dockerfile
    container_name: py-sc-server
    restart: unless-stopped
    depends_on:
      problem-solver:
        condition: service_healthy
    volumes:
      - ./kb:/ostis-ann/kb
    command:
      - "--host=problem-solver"
    networks:
      - ostis-ann

volumes:
  kb-binary: {}

networks:
  ostis-ann: {}
