sc_node_norole_relation->nrel_fault_tolerance;;
sc_node_norole_relation->nrel_working_capacity;;

sc_node_not_relation->technical_system;;
sc_node_not_relation->component;;
sc_node_not_relation->component_failure;;
sc_node_not_relation->system;;
sc_node_not_relation->state;;

sc_node_not_relation->concept_set;;
sc_node_not_relation->concept_element;;
sc_node_norole_relation->nrel_set_of_performance;;

nrel_fault_tolerance=> nrel_main_idtf: [Отказоустойчивость*](*<- lang_ru;;*);;
nrel_fault_tolerance=> nrel_main_idtf: [fault tolerance*](*<- lang_en;;*);;
definition ->... 
(*
->rrel_key_sc_element: nrel_fault_tolerance;;
<= nrel_sc_text_translation: ...(*->rrel_example:[Отказоустойчивость — свойство технической системы сохранять свою работоспособность после отказа одного или нескольких составных компонентов.](*<-lang_ru;;*);;*);;
=> nrel_main_idtf: [Определение (Отказоустойчивость*)](*<- lang_ru;;*);;
=> nrel_using_constants:
{
technical_system;
nrel_working_capacity;
component
};;
*);;

statement ->...
(*
->rrel_key_sc_element:nrel_fault_tolerance;;
<= nrel_sc_text_translation: ...(*->rrel_example:[Отказоустойчивость определяется количеством любых последовательных единичных отказов компонентов, после которого сохраняется работоспособность системы в целом.](*<-lang_ru;;*);;*);;
=> nrel_main_idtf: [Утверждение(Отказоустойчивость*)](*<- lang_ru;;*);;
=> nrel_using_constants:
{ 
component_failure;
nrel_working_capacity;
system
};;
*);;


relation => nrel_inclusion: oriented_relation;; 
relation => nrel_inclusion: binary_relation;;
oriented_relation -> nrel_fault_tolerance;;
nrel_fault_tolerance => nrel_inclusion: antireflexive_relation;;
nrel_fault_tolerance => nrel_inclusion: antitransitive_relation;;
nrel_fault_tolerance => nrel_inclusion: antisymmetric_relation;; 
antireflexive_relation -> nrel_fault_tolerance;; 
antitransitive_relation -> nrel_fault_tolerance;;
antisymmetric_relation -> nrel_fault_tolerance;;


nrel_fault_tolerance => nrel_first_domain: system;;
nrel_fault_tolerance => nrel_second_domain: state;;
..union<=nrel_combination:
{
system;
state
};;
nrel_fault_tolerance => nrel_definitional_domain:..union;; 

arity->arity_2;;
arity_2=>nrel_measurement:2;;
arity_2->nrel_fault_tolerance;;
number->2;;

ostis<-system;;
yes<-state;;
ostis=>nrel_fault_tolerance:yes;;