nrel_adaptive_learning_step
	<- sc_node_norole_relation;
	=> nrel_main_idtf: [адаптивный шаг обучения*] (* <- lang_ru;; *);
	=> nrel_main_idtf: [adaptive learning step*] (* <- lang_en;; *);;


nrel_adaptive_learning_step => nrel_definitional_domain: ...
	(*
		<= nrel_combination: ...
			(*
				-> neural_network_in_graphical_representation (* <= nrel_first_domain: nrel_adaptive_learning_step;;	*);;
				-> number (* <= nrel_second_domain: nrel_adaptive_learning_step;; *);;
			*);;
	*);;


nrel_adaptive_learning_step
	<- binary_relation;
	<- oriented_relation;
	<- antireflexive_relation;
	<- antisymmetric_relation;
	<- antitransitive_relation;;


definition -> ...
	(*
		=> nrel_main_idtf: [Опр.(адаптивный шаг обучения*)] (* <-lang_ru;; *);;
		-> rrel_key_sc_element: nrel_adaptive_learning_step;;

		<= nrel_using_constants: ...
			(*
				-> neural_network_in_graphical_representation;;
				-> concept_mean_square_error;;	
				-> nrel_function_minimization;;
				-> nrel_learning_step;;
			*);;

		<= nrel_sc_text_translation: ...
			(*
				->[Адаптивным шагом обучения называется такой шаг, который выбирается на каждом этапе обученя таким образом, чтобы минимизировать среднеквадратичную ошибку нейронности сети] (* <- lang_ru;; *);;
			*);;
	*);;


affirmation -> ...
	(*
		-> rrel_key_sc_element: nrel_adaptive_learning_step;;

		<= nrel_sc_text_translation: ...
			(*
				-> [Для линейной нейронной сети адаптивный шаг обратно пропоционален сумме квадратов выходоных значений всех нейронных узлов на данном этапе] (* <- lang_ru;; *);;
			*);;

		=> nrel_main_idtf: [Утв.(адаптивный шаг обучения*, нейронная сеть, сумма*, возведение в степень*, выходное значение*, нейронный узел)] (* <- lang_ru;; *);;
	*);;

illustration -> rrel_example: ...
(*
	=> nrel_main_idtf: [Рис.(адаптивный шаг обучения*)] (* <- lang_ru;; *);;
	-> rrel_key_sc_element: nrel_adaptive_learning_step;;
	<= nrel_sc_text_translation: ... (* -> "file://nrel_adaptive_learning_step.png";; *);;
*);;
