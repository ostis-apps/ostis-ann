sc_node_not_relation->concept_recurrent_neural_network;;
concept_recurrent_neural_network=>nrel_main_idtf:[recurrent neural network](* <-lang_en;; *);;
concept_recurrent_neural_network=>nrel_main_idtf:[рекуррентная нейронная сеть](* <-lang_ru;; *);; 
definition -> ...
	(*
		=> nrel_main_idtf: [Опр.(рекуррентная нейронная сеть)](* <- lang_ru;; *);;
		<= nrel_sc_text_translation:...
		(*
			-> rrel_example: [Рекуррентная нейронная сеть - сеть с двунаправленными связями, где аргументами функции активации подаются значения элементов входного и выходного слоя, где значения элементов выходного слоя получены на предыдущем этапе алгоритма обучения.](* <- lang_ru;; *);;
		*);;
		-> rrel_key_sc_element: concept_recurrent_neural_network;;
		<= nrel_using_constants :... 
		(*
			-> concept_neural_network_in_graphical_representation; nrel_backward_mapping;nrel_mapping; nrel_input_layer; nrel_output_layer; nrel_function_argument; learning_step; concept_learning_algorithm;;
		*);;
	*);; 
concept_recurrent_neural_network=> nrel_inclusion: Hopfield_neural_network;;
// done
illustration -> ...
	(*
         -> rrel_key_sc_element: concept_recurrent_neural_network;;
		=> nrel_main_idtf: [Рис.(рекуррентная нейронная сеть)](* <- lang_ru;; *);;
		<= nrel_sc_text_translation: ... (* -> "file://images//recur_neur_netw.png" ;; *);;
  *);;


concept_recurrent_neural_network<-rrel_explored_concept: section_subject_domain_of_neural_networks_with_feedbacks;;




























