sc_node_norole_relation->nrel_source_set;;
nrel_source_set=>nrel_main_idtf:[source set*](* <-lang_en;; *);;
nrel_source_set=>nrel_main_idtf:[исходная выборка*](* <-lang_ru;; *);;
nrel_source_set=>nrell_idtf:[выборка*](* <-lang_ru;; *);;
 definition -> ...
	(*
		=> nrel_main_idtf: [Опр.(исходная выборка*)](* <- lang_ru;; *);;
		<= nrel_sc_text_translation:...
		(*
			-> rrel_example: [Исходная выборка - множество нейронных узлов, в котором все элементы - элементы входного слоя и которое используется для минимизации ошибки нейронной сети при обучении.](* <- lang_ru;; *);;
		*);;
		-> rrel_key_sc_element: nrel_source_set;;
		<= nrel_using_constants :...
		(*
			-> concept_neuron_node; nrel_input_layer; nrel_synapse_weight;concept_neural_network_in_graphical_representation; learning;;//ошибка
		*);;
	*);; 
nrel_source_set<=nrel_subdividing: ... (* 
                         <-nrel_test_set; nrel_training_set;;
*);;
statement -> ...
	(*
          -> rrel_key_sc_element: nrel_source_set; learning;;
		=> nrel_main_idtf: [Утв.(обучение)](* <- lang_ru;; *);;//обучение
		<= nrel_sc_text_translation:...
		(*
			-> rrel_example: [При ограниченном объеме обучающей выборки она вся используется для обучения.](* <- lang_ru;; *);;
		*);;
	*);; 
nrel_source_set=> nrel_first_domain: concept_neural_network_in_graphical_representation;;
nrel_source_set=> nrel_second_domain:nrel_input_layer;;
nrel_source_set=> nrel_definitional_domain:...
	(*
		<= nrel_combination:...
		(*
			-> concept_neural_network_in_graphical_representation; nrel_input_layer;;
		*);;
	*);;
nrel_source_set<-oriented_relation; antireflexive_relation; antitransitive_relation; antisymmetric_relation;;

//сделано


nrel_source_set<-rrel_explored_concept: section_subject_domain_of_learning_neural_networks;;
































