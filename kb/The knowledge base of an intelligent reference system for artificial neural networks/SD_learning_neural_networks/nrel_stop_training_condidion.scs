nrel_stop_training_condition
<-sc_node_norole_relation;
=>nrel_main_idtf:[stop training condition*](* <-lang_en;; *);
=>nrel_main_idtf:[условия остановки обучения*](* <-lang_ru;; *);

<-rrel_key_sc_element: ...
(*
	<-definition ;;
		=> nrel_main_idtf: 
			[Опр.(условия остановки обучения*)](* <- lang_ru;; *);;
		=> nrel_using_constants :
		{
			concept_learning_algorithm;
			neural_network
		};;
<= nrel_sc_text_translation:...
	(*
		-> rrel_example:[<b>Условия остановки обучения*</b> -условия, при которых <b><sc_element sys_idtf="concept_learning_algorithm">алгоритм</b> обучения <b><sc_element sys_idtf="neural_network">нейронной сети</b> прекращает свою работу. ](*<- lang_ru;; =>nrel_format: format_html;;*);;
	*);;
*);

 => nrel_first_domain:concept_learning_algorithm;
 => nrel_second_domain:concept_condition;

<-rrel_key_sc_element:...
	(*
		=> nrel_main_idtf: [Утв. (условия остановки обучения*)](* <- lang_ru;; *);;
		=> nrel_using_constants :
		{
			concept_consistent_training;
			nrel_stop_training_condition;
			synaptic_connection
		};;
		<= nrel_sc_text_translation:...
		(*
			-> rrel_example: [При <b><sc_element sys_idtf="concept_consistent_training">последовательном обучении</b> существует два <b><sc_element sys_idtf="nrel_stop_training_condition">критерия остановки</b>: пока суммарная квадратичная ошибка сети не станет меньше заданной; Пока не перестанут изменяться <b><sc_element sys_idtf="synaptic_connection">синаптические связи</b>. ](*<- lang_ru;; =>nrel_format: format_html;;*);;
		*);;
*);
<-rrel_explored_concept: section_subject_domain_of_learnign_neural_networks;;


nrel_stop_training_condition=> nrel_definitional_domain: ...
(*
	<= nrel_combination:
	{
		concept_learning_algorithm;
		concept_condition
	};;
*);;

nrel_stop_training_condition <-rrel_explored_concept: section_subject_domain_of_learning_neural_networks;;


relation => nrel_inclusion: oriented_relation
(*
	-> nrel_stop_training_condition;;
*);;

relation=> nrel_inclusion: binary_relation
(*
	=> nrel_inclusion: asymmetric_relation
	(*
		-> nrel_stop_training_condition;;
	*);;

	=> nrel_inclusion: antireflexive_relation
	(*
		-> nrel_stop_training_condition;;
	*);;

	=> nrel_inclusion: symmetric_relation
	(*
		-|> nrel_stop_training_condition;;
	*);;
	=> nrel_inclusion: transitive_relation
	(*
		-|> nrel_stop_training_condition;;
	*);;

	=> nrel_inclusion: reflexive_relation
	(*
		-|> nrel_stop_training_condition;;
	*);;
*);;


