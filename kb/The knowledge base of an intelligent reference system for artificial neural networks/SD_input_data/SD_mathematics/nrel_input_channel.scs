sc_node_norole_relation->nrel_input_channel;;

nrel_input_channel=> nrel_main_idtf: [входной канал*](*<- lang_ru;;*);;
nrel_input_channel=> nrel_main_idtf: [input channel*](*<- lang_en;;*);;
definition ->... 
(*
->rrel_key_sc_element: nrel_input_channel;;
<= nrel_sc_text_translation: ...(*->rrel_example:[Входной канал - канал <b><sc_element sys_idtf="neuron">нейрона</b> , по которому он получает данные.](*<-lang_ru;;=> nrel_format: format_html;;*);;*);;
=> nrel_main_idtf: [Определение (входной канал*)](*<- lang_ru;;=> nrel_format: format_html;;*);;
=> nrel_using_constants:
{
neuron;
data
};;
*);;

statement ->...
(*
->rrel_key_sc_element:nrel_input_channel;;
<= nrel_sc_text_translation: ...(*->rrel_example:[В  <b><sc_element sys_idtf="neuron">нейроне</b> присутствуют несколько входных каналов, в которые даннные передаются из других <b><sc_element sys_idtf="neuron">нейронов</b> или поступают со входа нейронной сети.](*<-lang_ru;;=> nrel_format: format_html;;*);;*);;
=> nrel_main_idtf: [Утверждение(входной канал*)](*<- lang_ru;;=> nrel_format: format_html;;*);;
=> nrel_using_constants:
{ 
neuron;
neural_network
};;
*);;


oriented_relation -> nrel_input_channel;;
antireflexive_relation -> nrel_input_channel;; 
antitransitive_relation -> nrel_input_channel;;
antisymmetric_relation -> nrel_input_channel;;


nrel_input_channel => nrel_first_domain:neuron;;
nrel_input_channel => nrel_second_domain: channel;;
..union<=nrel_combination:
{
neuron;
channel
};;
nrel_input_channel => nrel_definitional_domain:..union;; 

arity->arity_2;;
arity_2=>nrel_measurement:2;;
arity_2->nrel_input_channel;;
number->2;;

formal_neuron=>nrel_input_channel:first_input_channel;;
nrel_input_channel<-rrel_explored_concept: section_subject_domain_of_input_mathematics_data;;




