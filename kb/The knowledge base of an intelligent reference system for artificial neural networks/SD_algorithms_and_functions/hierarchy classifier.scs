sc_node_not_relation->hierarchical_classifier;;
sc_node_not_relation->input_data;;
sc_node_not_relation->output_categories;;
sc_node_not_relation->lower_level;;
sc_node_not_relation->classifier_x;;

nrel_inclusion->(classifier=>hierarchical_classifier);;

hierarchical_classifier=> nrel_main_idtf: [иерархический классификатор](* <- lang_ru;; *);;
hierarchical_classifier=> nrel_main_idtf: [hierarchical classifier](* <- lang_en;; *);;
definition ->...
(*
->rrel_key_sc_element: hierarchical_classifier;;
<= nrel_sc_text_translation: ...(*->rrel_example:[Иерархический классификатор - это классификатор, который отображает входные данные в определенные подразделяемые выходные категории.](*<-lang_ru;;*);;*);;
=> nrel_main_idtf: [Определение (Иерархический классификатор)](*<- lang_ru;;*);;
=> nrel_using_constants:
{ 
 classifier;
input_data;
output_categories
};;
*);;

statement ->...
(*
->rrel_key_sc_element: hierarchical_classifier;;
<= nrel_sc_text_translation: ...(*->rrel_example:[ Классификация происходит сначала на низком уровне с высокоспецифичными частями входных данных.](*<-lang_ru;;*);;*);;
=> nrel_main_idtf: [Утверждение(Иерархический классификатор)](*<- lang_ru;;*);;
=> nrel_using_constants:
{
input_data;
lower_level
};;
*);;
classifier_x<-rrel_example:hierarchical_classifier;;
hierarchical_classifier=>nrel_inclusion:classifier;;

hierarchical_classifier<-rrel_explored_concept: section_subject_domain_of_algorithms_and_functions;;






























