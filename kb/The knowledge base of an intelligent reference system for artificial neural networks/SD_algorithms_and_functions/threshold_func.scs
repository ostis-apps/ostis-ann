sc_node_norole_relation->nrel_threshold_activation_function;;
nrel_threshold_activation_function=>nrel_main_idtf:[threshlod activation function*](* <-lang_en;; *);;
nrel_threshold_activation_function=>nrel_main_idtf:[пороговая функция активации*](* <-lang_ru;; *);;
nrel_threshold_activation_function=>nrel_idtf:[активационная функция единого скачка*](* <-lang_ru;; *);;
definition -> ...
	(*
		=> nrel_main_idtf: [Опр.(пороговая функция активации*)](* <- lang_ru;; *);;
		<= nrel_sc_text_translation:...
		(*
			-> rrel_example: [Пороговая функция активации - функция нелинейного преобразования, которая принимает минимальное значение, если аргумент меньше порогового значения, и максимальное, если аргумент больше порогового значения.](* <- lang_ru;; *);;
		*);;
		-> rrel_key_sc_element: nrel_threshold_activation_function;;
		<= nrel_using_constants :...
		(*
			-> nrel_function_value; nrel_function_argument; nrel_activation_function; nrel_threshold_value;;//+ пороговое значение
		*);;
	*);; 
 nrel_threshold_activation_function => nrel_first_domain: concept_neuron_node;;
 nrel_threshold_activation_function => nrel_second_domain:concept_neuron_node;;
 nrel_threshold_activation_function => nrel_definitional_domain:...
	(*
		<= nrel_combination:...
		(*
			-> concept_neuron_node;;
		*);;
	*);;
illustration -> ...
	(*
         -> rrel_key_sc_element: nrel_threshold_activation_function;;
		=> nrel_main_idtf: [Рис.(пороговая функция активации*)](* <- lang_ru;; *);;
		<= nrel_sc_text_translation: ... (* -> "file://images//porog.png" ;; *);;
  *);;


nrel_threshold_activation_function<-rrel_explored_concept: section_subject_domain_of_algorithms_and_functions;;
//done


































