sc_node_not_relation->Partitioned_Reservation;;
sc_node_not_relation->neuron_network_architecture;;
sc_node_not_relation->section;;
sc_node_not_relation->approach;;
sc_node_not_relation->approach_of_fault_tolerancef;;
sc_node_not_relation->reservation;;

sc_node_norole_relation->nrel_duplicate;;
sc_node_norole_relation->nrel_fault_tolerance;;

;;

Partitioned_Reservation=> nrel_main_idtf: [Секционированное резервирование](* <- lang_ru;; *);;
Partitioned_Reservation=> nrel_main_idtf: [Partitioned Reservation](* <- lang_en;; *);;
definition ->...
(*
->rrel_key_sc_element: Partitioned_Reservation;;
<= nrel_sc_text_translation: ...(*->rrel_example:[Секционированное резервирование значит ,что архитектура нейронной сети разбивается на секции, каждая из которых дублируется.](*<-lang_ru;;*);;*);;
=> nrel_main_idtf: [Определение (аналитический блок)](*<- lang_ru;;*);;
=> nrel_using_constants:
{ 
 neuron_network_architecture;
 nrel_duplicate;
section
};;
*);; 

statement ->...
(*
->rrel_key_sc_element: Partitioned_Reservation;;
<= nrel_sc_text_translation: ...(*->rrel_example:[Секционированное резервирование это один из двух подходов к обеспечению отказоустойчивасти.](*<-lang_ru;;*);;*);;
=> nrel_main_idtf: [Утверждение(аналитический блок)](*<- lang_ru;;*);;
=> nrel_using_constants:
{
approach;
nrel_fault_tolerance
};;
*);;
reservation<-rrel_example:Partitioned_Reservation;;
Partitioned_Reservation=>nrel_inclusion:approach_of_fault_tolerancef;;

Partitioned_Reservation<-rrel_explored_concept: section_subject_domain_of_algorithms_and_functions;;





























