sc_node_norole_relation->nrel_discriminant_line;;
nrel_discriminant_line=>nrel_main_idtf:[discriminant line*](* <-lang_en;; *);;
nrel_discriminant_line=>nrel_main_idtf:[дискриминантная линия*](* <-lang_ru;; *);;
 definition -> ...
	(*
		=> nrel_main_idtf: [Опр.(дискриминантная линия*)](* <- lang_ru;; *);;
		<= nrel_sc_text_translation:...
		(*
			-> rrel_example: [Дискриминантная линия - двумерное линейное пространство, разделяющее выходные значения нейронной сети на плоскости и строящееся при помощи линейной функции преобразования.](* <- lang_ru;; *);;
		*);;
		-> rrel_key_sc_element: nrel_discriminant_line;;
		<= nrel_using_constants :...
		(*
			-> concept_neural_network_in_graphical_representation; nrel_output_layer; nrel_linear_activation_function;;
		*);;
	*);; 
nrel_discriminant_line => nrel_first_domain: concept_neural_network_in_graphical_representation;;
nrel_discriminant_line=> nrel_second_domain:concept_line;;
nrel_discriminant_line=> nrel_definitional_domain:...
	(*
		<= nrel_combination:...
		(*
			-> concept_neural_network_in_graphical_representation; concept_line;;
		*);;
	*);;
illustration -> ...
	(*
         -> rrel_key_sc_element: nrel_discriminant_line;;
		=> nrel_main_idtf: [Рис.(пороговая функция активации*)](* <- lang_ru;; *);;
		<= nrel_sc_text_translation: ... (* -> "file://images//disc_line.png" ;; *);;
  *);;
// done
nrel_discriminant_line<-oriented_relation; antireflexive_relation; antitransitive_relation; antisymmetric_relation;;

sc_node_not_relation->concept_line;;
concept_line=>nrel_main_idtf:[line](* <-lang_en;; *);;
concept_line=>nrel_main_idtf:[ линия](* <-lang_ru;; *);;


nrel_discriminant_line<-rrel_explored_concept: section_subject_domain_of_algorithms_and_functions;;
































