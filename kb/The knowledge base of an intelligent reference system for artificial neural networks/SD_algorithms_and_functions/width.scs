sc_node_norole_relation->nrel_radial_bases_function_width;;
sc_node_norole_relation->nrel_define;;

sc_node_not_relation->neuron;;
sc_node_not_relation->width;;
sc_node_not_relation->radial_bases_neural_network;;
sc_node_not_relation->learning_process;;
sc_node_not_relation->function;;



nrel_radial_bases_function_width=> nrel_main_idtf: [ширина радиально базисной функции*](*<- lang_ru;;*);;
nrel_radial_bases_function_width=> nrel_main_idtf: [radial bases function width*](*<- lang_en;;*);;
definition ->... 
(*
->rrel_key_sc_element: nrel_radial_bases_function_width;;
<= nrel_sc_text_translation: ...(*->rrel_example:[Ширина радиально базисной функции - ширина нейрона в радиально базисных нейронных сетях.](*<-lang_ru;;*);;*);;
=> nrel_main_idtf: [Определение (ширина радиально базисной функции*)](*<- lang_ru;;*);;
=> nrel_using_constants:
{
neuron;
width;
radial_bases_neural_network
};;
*);;

statement ->...
(*
->rrel_key_sc_element:nrel_radial_bases_function_width;;
<= nrel_sc_text_translation: ...(*->rrel_example:[Ширина опрделяется в процессе обучения.](*<-lang_ru;;*);;*);;
=> nrel_main_idtf: [Утверждение(ширина радиально базисной функции*)](*<- lang_ru;;*);;
=> nrel_using_constants:
{ 
learning_process;
nrel_define
};;
*);;


relation => nrel_inclusion: oriented_relation;; 
relation => nrel_inclusion: binary_relation;;
oriented_relation -> nrel_radial_bases_function_width;;
binary_relation => nrel_inclusion: antireflexive_relation;;
binary_relation => nrel_inclusion: antitransitive_relation;;
binary_relation => nrel_inclusion: antisymmetric_relation;; 
antireflexive_relation -> nrel_radial_bases_function_width;; 
antitransitive_relation -> nrel_radial_bases_function_width;;
antisymmetric_relation -> nrel_radial_bases_function_width;;


nrel_radial_bases_function_width => nrel_first_domain:function;;
nrel_radial_bases_function_width => nrel_second_domain: number;;
..union<=nrel_combination:
{
function;
number
};;
nrel_radial_bases_function_width => nrel_definitional_domain:..union;; 

arity->arity_2;;
arity_2=>nrel_measurement:2;;
arity_2->nrel_radial_bases_function_width;;
number->2;;

function=>nrel_radial_bases_function_width:0.3;;
number->0.3;;

nrel_radial_bases_function_width<-rrel_explored_concept: section_subject_domain_of_algorithms_and_functions;;




























