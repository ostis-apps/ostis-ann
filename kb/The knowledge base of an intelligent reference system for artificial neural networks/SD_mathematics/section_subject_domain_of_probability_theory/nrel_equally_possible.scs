sc_node_norole_relation -> nrel_equally_possible;;

nrel_equally_possible => nrel_main_idtf: [Равновозможный*](*<- lang_ru;;*);;
nrel_equally_possible => nrel_main_idtf: [Equally possible*](*<- lang_en;;*);;

definition -> ...
(*
    -> rrel_key_sc_element: nrel_equally_possible;;
    <= nrel_sc_text_translation: ...
        (*
            -> [Два или бОльшее количество <sc_element sys_idtf="concept_event">событий</sc_element> называют равновозможными, если ни одно из них не является более возможным, чем другие.] (*<-lang_ru;;=>nrel_format:format_html;;*);;
        *);;
    => nrel_main_idtf: [Опр.(Равновозможный*)](*<- lang_ru;;*);;
    <= nrel_using_constants: ...
        (*
            -> concept_event;;
        *);;
*);;


statement -> ...
(*
    -> rrel_key_sc_element: nrel_equally_possible;;
    <= nrel_sc_text_translation: ...
        (*
            -> [Тем не менее, в рассмотренных трёх случаях при потере равновозможности всё же сохраняется <sc_element sys_idtf="concept_random_event">случайность событий</sc_element>.] (*<-lang_ru;;=>nrel_format:format_html;;*);;
        *);;
    => nrel_main_idtf: [Утв.(Равновозможный*)](*<- lang_ru;;*);;
<= nrel_using_constants: ...
        (*
            ->concept_random_event;;
        *);;
*);;

parameter -> arity;;
arity -> binary_relation;;
binary_relation -> nrel_equally_possible;;
binary_relation => nrel_measurement: 2;;
number -> 2;;

relation => nrel_equally_possible: unoriented_relation;;
relation => nrel_equally_possible: binary_relation;;

binary_relation => nrel_equally_possible: reflexive_relation;;
binary_relation => nrel_equally_possible: transitive_relation;;
binary_relation => nrel_equally_possible: symmetric_relation;;

reflexive_relation -> nrel_equally_possible;;
transitive_relation -> nrel_equally_possible;;
symmetric_relation -> nrel_equally_possible;;

nrel_equally_possible<-rrel_explored_concept: section_subject_domain_of_probability_theory;;
//<sc_element sys_idtf=""></sc_element>
